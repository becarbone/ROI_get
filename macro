var total, sourcedir, sourcelist, ROIdir, numChan, finChan;
var channels, chanArray, title, i, n, repeat, newTitle, measure; 

//this macro is to select ROI and split them by channel, saving each channel in individual folders
//intended for the co-culture analysis, but not limited in application

//the basic process is that it asks you to open all the images you want ROI from, select a folder
//to save the output ROI images in (creating subfolders for each channel) as well as the zip file
//for the ROImanager metadata detailing where in the image the ROI were taken from
//the macro outputs the area of the ROI selected for use in the "co-culture_1cha-stepped" macro

waitForUser("This macro needs an empty folder for the saved ROI images and all images open");
total = 0
ROIdir = getDirectory("Choose folder to save the ROI in");
filedir = getDirectory("Choose folder for ROI .zip files");
Dialog.create("Channel Info");
	choices = newArray("rectangle","polygon");
	Dialog.addChoice("What shape ROI?",choices,"polygon");
	Dialog.addNumber("How many channels?",4,0,1,"channel/s");
Dialog.show();
numChan = Dialog.getNumber();
choice = Dialog.getChoice();
Dialog.create("what colors\nare they");
	channels = newArray("Cyan","Blue","Green","Red");
	for(n=0;n<numChan;n++){
		Dialog.addChoice("color",channels,channels[n]);
	}
Dialog.show();
rurea = "ROI	Area";
print(rurea);
chanArray = newArray();
ROIArray = newArray();
for(n=0;n<numChan;n++) {
	chanArray = Array.concat(chanArray,Dialog.getChoice());
	if(File.exists(ROIdir+chanArray[n])!=1) {
		File.makeDirectory(ROIdir+chanArray[n]);
	}
	//ROIpath = ROIdir+chanArray[n];
	ROIpath = getDirectory("Choose folder for the " + chanArray[n]+" channel");
	ROIArray = Array.concat(ROIArray, ROIpath);
}

for(p=nImages;p>0;p--) {
	selectImage(p);
	run("Properties...", "channels="+numChan+" slices=1 frames=1 unit=micron pixel_width=0.1801990 pixel_height=0.1801990 voxel_depth=0.2967900");
	title = getTitle();
	run("Channels Tool...");
	//creates a loop for multiple HEK in one image
	Dialog.create("Repeat?");
		Dialog.addMessage("Do you have a new ROI in frame?");
		//if you answer "yes" in lowercase it will continue, if
		//anything else it will close the image and continue to the next one
		Dialog.addString("", "yes or no",40);
		Dialog.show();
	repeat = Dialog.getString();
	roiManager("reset");
	while (repeat == "yes") {
		run("Original Scale");			
		title = getTitle();
		//this is the function, see the bottom of the macro
		createROI();
		rurea = rurea+"\n"+title+"	"+measure;
		print(title+"	"+measure);
		Dialog.create("Repeat?");
			Dialog.addMessage("Do you have another ROI in frame?");
			Dialog.addString("", "yes or no",30);
			Dialog.show();
		repeat = Dialog.getString();
	}
	if(repeat != "yes") {
		run("ROI Manager...");
		if(roiManager("count") > 0) {
			roiManager("Save", filedir + title+"_ROI.zip");
			close();
		}
		else {
			close();
		}
	}
}
File.saveString(rurea, ROIdir+"area.xls");

//this function zooms in, gets the title of the image, prompts you to change it based on the # ROI you've selected
//i.e. ROI-1, ROI-2, etc...
//it will then measure the region selected, copy it in each channel and save each channel as an individual image
//with the color in the name
//update 4/12/2019 - v2
//had it use the duplicate function instead of copy to retain the image metadata w/r/t pixel/micron ratio

function createROI()
	{
	setTool(choice);
	run("In [+]");
	run("In [+]");
	run("In [+]");
	title=getTitle();
	Dialog.create("Title");
		Dialog.addMessage("Rename for ROI number");
		Dialog.addString("", title,50);
		Dialog.show();
	newTitle = Dialog.getString();
	rename(newTitle);
	title=getTitle();
	selectWindow(title);
	waitForUser ("Select ROI then hit OK");
	roiManager("Add");
	run("Clear Results");
	run("Measure");
	measure = getResult("Area",0);
	selectWindow(title);
	c=0;
	for(l=0;l<numChan;l++) {	
		setSlice(l+1);
		run("Duplicate...", "title=ROI");
		selectWindow("ROI");
		run(chanArray[c]);
		saveAs("Tiff", ROIArray[l]+title+"_"+chanArray[c]);
		close();
		c=c+1;
	}
	selectWindow(title);
	run("View 100%");
}
